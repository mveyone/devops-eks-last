pipeline {
    agent any

    stages {

      stage('Create Cluster') {
        steps {
          // You will need to install CloudBees AWS Credentials Plugin in Jenkins and add AWS Credentials first 
            withCredentials([[
              $class: 'AmazonWebServicesCredentialsBinding',
              credentialsId: "aws-credentials",
              accessKeyVariable: 'AWS_ACCESS_KEY_ID',
              secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
              ]]) {
              // sh "eksctl create cluster --name nodejs-cluster --region us-east-1 --nodes-min=2"
              sh "eksctl create cluster \
                --name k8s-cluster \
                --region us-east-1 \
                --nodegroup-name k8s-nodes \
                --node-type t3.small \
                --nodes 2"
            }
        }
      }

      stage('Update Kubeconfig') {
        steps {
          // You will need to install CloudBees AWS Credentials Plugin in Jenkins and add AWS Credentials first 
            withCredentials([[
              $class: 'AmazonWebServicesCredentialsBinding',
              credentialsId: "aws-credentials",
              accessKeyVariable: 'AWS_ACCESS_KEY_ID',
              secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
              ]]) {
              sh """
              aws eks update-kubeconfig --name nodejs-cluster
              """
            }
        }
      }
      
      stage('Create Namespace') {
        steps {
          // You will need to install CloudBees AWS Credentials Plugin in Jenkins and add AWS Credentials first 
            withCredentials([[
              $class: 'AmazonWebServicesCredentialsBinding',
              credentialsId: "aws-credentials",
              accessKeyVariable: 'AWS_ACCESS_KEY_ID',
              secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
              ]]) {
              sh "kubectl create namespace python-app"
            }
        }
      }

      stage('Deploy App') {
        steps {
            script{
                build job: 'DEPLOY_APP',
                parameters: [
                [ $class: 'StringParameterValue', name: 'DEPLOYMENT']    
                ]
                
            } 
        } 
      }
    }
}